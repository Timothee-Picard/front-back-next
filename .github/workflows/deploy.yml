name: CI/CD for Next.js

on:
  push:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'

      - name: Install dependencies
        run: npm install

      - name: Run tests
        run: npm test

  build:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'

      - name: Install dependencies
        run: npm install

      - name: Clean output directory
        run: rm -rf out/*

      - name: Build the project
        run: npm run build

      - name: Build the doc
        run: npm run tsdoc

      - name: move docs to out
        run: mv docs out/documentation

      - name: Authenticate with npm
        run: echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" > ~/.npmrc

      - name: Check if version exists on npm
        id: check_version
        run: |
          PACKAGE_VERSION=$(node -p "require('./package.json').version")
          PACKAGE_NAME=$(node -p "require('./package.json').name")
          echo "Checking if $PACKAGE_NAME@$PACKAGE_VERSION exists on npm..."
          if npm view "$PACKAGE_NAME@$PACKAGE_VERSION" > /dev/null 2>&1; then
            echo "Version $PACKAGE_NAME@$PACKAGE_VERSION already exists on npm. Skipping publish."
            echo "SKIP_NPM_PUBLISH=true" >> $GITHUB_ENV
          else
            echo "Version $PACKAGE_NAME@$PACKAGE_VERSION does not exist. Proceeding with publish."
            echo "SKIP_NPM_PUBLISH=false" >> $GITHUB_ENV
          fi

      - name: publish package on NPM
        if: env.SKIP_NPM_PUBLISH == 'false'
        run: |
          npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Setup
        id: pages
        uses: actions/configure-pages@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v2
        with:
          path: out

  deploy:
    needs: build
    runs-on: ubuntu-latest

    permissions:
      pages: write
      id-token: write

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2